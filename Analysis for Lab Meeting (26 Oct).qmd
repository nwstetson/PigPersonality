---
title: "Analysis for 26 Oct Lab Meeting"
format: html
editor: visual
---

## Loading library

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(corrr)
library(psych)
library(irr)
library(readr)
```

## Load DF

```{r}
obs <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Obs_Oct21_Clean.csv", show_col_types = FALSE)  # behavior observations (2/3 of the way done)

svy_current <- Dan_Oct24  # current survey data (7 responses)

meta <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/PigSample.csv", show_col_types = FALSE) # meta data (pig demographics)

```

## Cleaning Data

Put meta data into df based on pig id number

```{r}
obs_m <- inner_join(obs, meta, by = "PigID")
current_m <- inner_join(svy_current, meta, by = "PigID")


# DF with just test items
current_svy_items <- svy_current %>% select(4:38)

# DF with just scores
current_pig_scores <- current_m %>% select(Name, 40:51)
```

### Make wide version of survey results

```{r}
current_wide <- current_m  %>% 
  pivot_longer(cols = 40:51, names_to = "facet") 
current_wide <- current_wide %>% rename_at('value', ~'facet.value')

current_wide <-current_wide %>% 
  pivot_longer(cols = 4:38, names_to = "item")

current_wide <- current_wide %>% rename_at('value', ~'item.value')
```

## Overview of survey data

### Personality Scores

```{r}
summary(current_pig_scores)

sd(current_pig_scores$SC1)
```

### Items

```{r}
summary(current_svy_items)
```

### As a table

üêΩ How can I get this to average each pig's scores across raters? (in the real data, each pig will be scored twice for each facet)

```{r}
current_pig_scores <- current_m %>%
  select(Name, 40:51)

view(current_pig_scores)
```

```{r}
ggplot(current_wide, aes(x= facet, y= facet.value, group = Name, color = Name)) +
  geom_point() +
    geom_line(alpha=.5) +
    theme_classic() +
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Differences in Personality Scores Between Pigs")
```

## Internal Reliability

### Inter-item correlation

```{r}
# Make DF with just test items
current_svy_items <- svy_current %>% select(4:38)

# Overall average inter-item correlation for all surveys completed (each pig has 2 surveys)
current_svy_items_corr <- current_svy_items %>% correlate() 

view(current_svy_items_corr) # works so far

# current_svy_items_corr <- current_svy_items_corr %>% colMeans(na.rm = TRUE) # Doesn't run because it's not numeric

 # Make it numeric
current_item_corr <- char2numeric(current_svy_items_corr)
view(current_svy_items_corr)
class(current_svy_items_corr) # Didn't make it numeric?

# Make it numeric in another way
current_svy_items_corr <- as.numeric(unlist(current_svy_items_corr)) # Messes it up
view(current_svy_items_corr) 
class(current_svy_items_corr) # Not numeric

current_svy_items_corr <- current_svy_items_corr %>% colMeans(na.rm = TRUE)
```

#### Make average correlations into a histogram

```{r}
ggplot(aes(x = current_svy_items_corr)) +
    geom_histogram(bins = 10, alpha = .5) +
    geom_vline(xintercept = mean(current_svy_items_corr), color = "dodger blue") +
    xlab("Mean inter-item correlation") +
    theme_minimal()
```

Chronbach's alpha

AHHHHH IT WON'T WORK BECAUSE DAN DIDN'T FILL OUT A QUESTION

```{r}
# psych::alpha(current_svy_items, check.keys = TRUE)

# psych::alpha(current_svy_items, check.keys = TRUE)$total$std.alpha #this just gets the alpha value itself
```
