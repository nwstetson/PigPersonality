---
title: "Pig Personality"
author: "Noah Stetson"
date: "`r Sys.Date()`"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## This is the analysis for my undergraduate thesis on personality in pigs üê∑

## (currently using mock data for survey results because the actual one only has 7/40 surveys completed) üôä

#### üêΩ = questions I have

## Loading library

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(corrr)
library(psych)
library(irr)
library(readr)
```

## Loading datasets

Pulled from GitHub so you don't need to change these or download the CSV files!!

When I have the actual survey data, I will upload that to GitHub and update the url for `svy` to be for the actual file instead of for the mock data file that I generated in Qualtrics

```{r}
obs <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Obs_Oct21_Clean.csv", show_col_types = FALSE)  # behavior observations (2/3 of the way done)

svy <-read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/CaregiverSurveyMOCKCleaner.csv", show_col_types = FALSE)  # survey data (mock data for now)

meta <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/PigSample.csv", show_col_types = FALSE) # meta data (pig demographics)
```

## Cleaning Data

Put meta data into df based on pig id number

```{r}
obs_m <- inner_join(obs, meta, by = "PigID")
svy_m <- inner_join(svy, meta, by = "PigID")

# DF with just test items
svy_items <- svy %>% select(4:38)

# DF with just scores
pig_scores <- svyt_m %>% select(Name, 40:51)
```

### Make wide version of survey results

```{r}
svy_wide <- svy_m %>% 
  pivot_longer(cols = 50:61, names_to = "facet", values_to ='facet.value') 

svy_wide <-svy_wide %>% 
  pivot_longer(cols = 14:48, names_to = "item", values_to = 'item.value')
```

# Preliminary Analyses

## Overview of Personality Survey Scores

```{r}
summary(pig_scores) # Summary of personality scores
summary(svy_items) # Summary of item scoring

sd(current_pig_scores$SC1) # Maybe turn SDs into a table and do something with that?
```

### As a table

üêΩ How can I get this to average each pig's scores across raters? (in the real data, each pig will be scored twice for each facet)

```{r}
Pig_Scores <- svy_m %>%
  select(Name, 50:61)

view(Pig_Scores)
```

### As a graph

üêΩ What kind of visualization could I use to summarize this better?

## Sort by main facet not sub-facet

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value, group = Name, color = Name)) +
  geom_point() +
  geom_line(alpha=.5) +
    theme_classic() +
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Differences in Personality Scores Between Pigs")
```

## Overview of Behaviors

### As a table

üêΩ How do I make a new df for observational data that does counts of each behavior

Like this:

Pig \| Behavior \| Counts

Atlas \| Sniff.obj \| 3

Atlas \| Get.disp \| 1

```{r}
behavior_table = table(obs$Pig, obs$Behavior) #Here's an overview of occurances of behaviors for now
behavior_counts <- data.frame(rbind(behavior_table))


write.csv(behavior_counts, "~/Desktop/behavior_counts_Oct26.csv") # Convert to Excel file to magically add row numbers idk
# Then manually change row "Pig" to say "name"

#Then re-upload and it works hehe
behavior_counts <- read_csv("~/Desktop/behavior_counts_Oct26.csv")


# Make wide version
behavior_counts_wide <-behavior_counts %>% 
  pivot_longer(cols = 2:20 , names_to = "Behavior", values_to = 'Count')


# Also make verion with meta data
behavior_m <- inner_join(behavior_counts, meta, by = "Name")
```

### As a graph

üêΩ Too messy! How do I make it look like the scatterplot I did above, but with "Behavior" on x-axis

```{r}
ggplot(behavior_counts_wide, aes(x= Behavior, y= Count, group = Name, color = Name)) +
  geom_point() +
    theme_classic() +
  xlab("Behavior") +
  ylab("Counts") +
  ggtitle("Differences in Behavior Between Pigs")
```

```{r}
ggplot(behavior_counts_wide, aes(x= Behavior, y= Count, group = Name, color = Name)) +
  geom_point() +
    theme_classic() +
  xlab("Behavior") +
  ylab("Counts") +
  ggtitle("Differences in Behavior Between Pigs")


# use mutate
# make new row for behavior category
# stacked bar chart
```

## Internal Reliability

### Inter-item correlation

(correlations between test items)

```{r}
# Make DF with just test items
svy_items <- svy %>% select(14:48)


svy_items_corr <- svy_items %>% correlate() %>% select(-term)
svy_items_corr <- colMeans(svy_items_corr, na.rm = TRUE)


# Get average correlation between all the items
mean(svy_items_corr)
# -0.00331298
```

#### Make average correlations into a histogram

üêΩ

```{r}
ggplot(aes(x = svy_items_corr)) +
    geom_histogram(bins = 10, alpha = .5) +
    geom_vline(xintercept = mean(current_svy_items_corr), color = "dodger blue") +
    xlab("Mean inter-item correlation") +
    theme_minimal()
```

### Inter-total correlation

(correlations between scores)

```{r}
# Make df with just scores
svy_scores <- svy %>% select(49:61)

svy_scores_corr <- svy_scores %>% correlate() %>% select(-term)
svy_scores_corr <- colMeans(svy_scores_corr, na.rm = TRUE)

mean(svy_scores_corr)
# 0.01505786
```

### Make into histogram

üêΩ

```{r}
data.frame(svy_scores_corr %>% 
  ggplot(aes(x = svy_scores_corr)) +
    geom_histogram(bins = 10, alpha = .5) +
    geom_vline(xintercept = mean(svy_scores_corr), color = "dodger blue") +
    xlab("Mean inter-total correlation") +
    theme_minimal()
```

### Cronbach's alpha

`check.keys = TRUE` accounts for reverse-scored items just FYI

```{r}
psych::alpha(svy_items, check.keys = TRUE)

psych::alpha(svy_items, check.keys = TRUE)$total$std.alpha #this just gets the alpha value itself
# 0.6342141 (it's mock data though!!)
```

üêΩ Should I also do composite reliability?

```{r}
# https://www.r-bloggers.com/2016/08/five-ways-to-calculate-internal-consistency

# scroll down to "Composite Reliability" for instructions

```

## Inter-observer Reliability

Might not be useful

### Cohen's Kappa

üêΩ How do I set up the date frame/run this? I definitely don't think I'm doing this part right

```{r}

# Attempt 1
# Generate df containing survey scores and rater
svy_scores_raters <- svy %>% select(11,49:61)
#  idk if I need to include PigID but that's column 12
kappa2(svy_scores_raters[, c("1", "2")], weight = "unweighted")
# doesn't work because of how the DF is set up
# do I need to set up the DF differently, or should I run a different test?
# or run this one but in  different way?
# Does not work

#Attempt 2 (doing it by score)
sc1_raters <- svy %>% 
  pivot_longer(cols = 'Rater', 'SC1', names_to = 'Score')
sc1_raters <- svy %>% select('Rater', 'SC1')
cohen.kappa(x=cbind(1, 2))
# Runs, but puts 0 for everything so must not be right either

```

# Primary Analyses

Do personality scores correlate with observable behaviors?

üêΩ This part I just made up and don't really know what to do so definitely let me know if you have better ideas on what I could do here

## Repeatability of Behaviors

üêΩ Eli Strauss said to do this but idk how to do it but I was trying to act cool and normal so I pretended that I knew what he was talking about the whole time

```{r}
# Put repeatability stuff here
# Something like this? https://cran.r-project.org/web/packages/rptR/vignettes/rptR.html

repeatability(obs)
```

## Dominance Over Other Pigs

Hypothesis: A pig's Dominance Over Other Pigs score (SC16) positively correlates with number of counts of obs\$Attempt.displace and negatively correlates with number of counts of \$Get.displaced

#### Attempts at Displacement

```{r}
# Correlation between pig's SC16 vs # of times they attempted to displace another pig

# Make a graph
```

#### Getting Displaced

```{r}
# Correlation between pig's SC16 vs # of times they got displaced by another pig

# Make a graph
```

## Active Engagement

Hypothesis: Active Engagement score negatively correlated with number of times pig was resting (obs\$Rest)

```{r}
# Correlation between each pig's Active Engagement score vs number of times they were recorded to be resting

# Make a graph
```

Idk what else I can do! I changed my survey measure and I think that was a mistake because my ethogram was designed to work with a different survey where different items were meant to do with facets the survey was testing

# Additional Analyses

## Subscale Analyses

```{r}
# Compare sex, group, and presence/absence of traumatic background with personality traits accross all pigs

# Is there a sex difference in personality scores?
ggplot(svy_wide, aes(x= facet, y= facet.value, group = Name, color = Name)) +
  geom_point() +
  geom_line(alpha=.5) +
  theme_classic()
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Differences in Personality Scores Between Pigs") +
  facet_wrap (~ Sex)
  
# Maybe average [trait] score for [group 1] and [group 2] or something like that

# Make social networks for Yaupon and Beautyberry
```

### Sex differences in getting displaced???

Males maybeee get displaced less???

```{r}
ggplot(behavior_m, aes(x=Get.disp, fill=Sex)) + 
   theme_classic() +
  xlab("Get Displaced") +
  ylab("Counts") +
  ggtitle("How Often Do Pigs Get Displaced?") +
  geom_density(alpha = 0.4) +
  theme_minimal() +
  scale_fill_manual(values = c("#999999", "#E69F00"))
```

### Background differences in getting displaced

```{r}
ggplot(behavior_m, aes(x=Get.disp, fill=Background)) + 
  theme_classic() +
  xlab("Get Displaced") +
  ylab("Counts") +
  ggtitle("Do Pigs From Abuse/Neglect Backgrounds Get Displaced More?") +
  geom_density(alpha = 0.4) +
  theme_minimal() +
  scale_fill_manual(values = c("#999999", "#E69F00"))
```

### Does get.disp correlated with SC12 (dominance over pigs)

-   compare by sex

```{r}
behavior_and_scores <- inner_join(behavior_m, Pig_Scores, by = "Name")


ggplot(behavior_and_scores, aes(x=Get.disp, y=SC12)) +
         geom_point() +
          stat_smooth(method = "lm") +
    xlab("Times Displaced") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Get Displaced Less?")
```

### Active Engagement vs Resting (Josh said don't do this bc engagment might not be the opposite of resting smh)

```{r}
ggplot(behavior_and_scores, aes(x=Travel, y=SC9)) +
         geom_point() +
          stat_smooth(method = "lm") +
    xlab("Times Traveling") +
  ylab("Active Engagement Score") +
  ggtitle("Do Pigs that Score High on Active Engagement Travel More?")
```

## Potential Moderators

```{r}
# Compare length of time volunteer has known pig with correlations bewteen surveys and traits from Primary Analyses???
```

Factor analysis

```{r}

```
