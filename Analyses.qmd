---
title: "Pig Personality"
author: "Noah Stetson"
date: "`r Sys.Date()`"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## This is the analysis for my undergraduate thesis on personality in pigs üê∑

## (currently using mock data for survey results because the actual one only has 7/40 surveys completed) üôä

#### üêΩ = questions I have

## Loading library

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(corrr)
library(psych)
library(irr)
library(readr)
```

## Loading datasets

Pulled from GitHub so you don't need to change these or download the CSV files!!

When I have the actual survey data, I will upload that to GitHub and update the url for `svy` to be for the actual file instead of for the mock data file that I generated in Qualtrics

```{r}
obs <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Obs_Oct21_Clean.csv", show_col_types = FALSE)  # behavior observations (2/3 of the way done)

svy <-read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/CaregiverSurveyMOCKCleaner.csv", show_col_types = FALSE)  # survey data (mock data for now)

meta <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/PigSample.csv", show_col_types = FALSE) # meta data (pig demographics)
```

## Cleaning Data

Put meta data into df based on pig id number

```{r}
obs_m <- inner_join(obs, meta, by = "PigID")
svy_m <- inner_join(svy, meta, by = "PigID")
```

### Make wide version of survey results

run this chunk together or else üôà

I bet there's a shorter way to do this but oh well

```{r}
svy_wide <- svy_m %>% 
  pivot_longer(cols = 50:61, names_to = "facet") 
svy_wide <- svy_wide %>% rename_at('value', ~'facet.value')

svy_wide <-svy_wide %>% 
  pivot_longer(cols = 14:48, names_to = "item")

svy_wide <- svy_wide %>% rename_at('value', ~'item.value')
```

# Preliminary Analyses

## Overview of Personality Scores

### As a table

üêΩ How can I get this to average each pig's scores across raters (in the real data, each pig will be scored twice for each facet)

```{r}
Pig_Scores <- svy_m %>%
  select(Name, 50:61)

view(Pig_Scores)
```

### As a graph

üêΩ What kind of visualization could I use to summarize this better?

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value, group = Name, color = Name)) +
  geom_point() +
  geom_line(alpha=.5) +
    theme_classic() +
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Differences in Personality Scores Between Pigs")
```

## Internal Reliability

### Inter-item correlation

(correlations between test items)

#### üêΩ My main issue right now: How do I remove the NAs in svy_items_corr? When I try to run it, it says `Error in colMeans(., na.rm = TRUE) : 'x' must be numeric`, but even when I try to do `as.numeric` it doesn't work

```{r}
# Make DF with just test items
svy_items <- svy %>% select(14:48)

# Overall average inter-item correlation for all surveys completed (each pig has 2 surveys)
svy_items_corr <- svy_items %>% correlate() %>% colMeans(na.rm = TRUE) # Having trouble removing NA

as.numeric(svy_items_corr)
# still doesn't work

# Get average correlation between all the items
mean(svy_items_corr) 
```

#### Make average correlations into a histogram

üêΩ (won't work until I can remove the NAs üò∞)

```{r}
data.frame(svy_items_corr %>% 
  ggplot(aes(x = svy_items_corr)) +
    geom_histogram(bins = 10, alpha = .5) +
    geom_vline(xintercept = mean(svy_items_corr), color = "dodger blue") +
    xlab("Mean inter-item correlation") +
    theme_minimal()
```

### Inter-total correlation

(correlations between scores)

üêΩ Same issue with removing NAs as listed above

```{r}
# Make df with just scores
svy_scores <- svy %>% select(49:61)

svy_scores_corr <- svy_scores %>% correlate() %>% colMeans(na.rm = TRUE)  # Having trouble removing NA

mean(svy_scores_corr)

```

### Make into histogram

üêΩ (also won't work until I can remove NAs)

```{r}
data.frame(svy_scores_corr %>% 
  ggplot(aes(x = svy_scores_corr)) +
    geom_histogram(bins = 10, alpha = .5) +
    geom_vline(xintercept = mean(svy_scores_corr), color = "dodger blue") +
    xlab("Mean inter-total correlation") +
    theme_minimal()
```

### Chronbach's alpha

`check.keys = TRUE` accounts for reverse-scored items just FYI

```{r}
psych::alpha(svy_items, check.keys = TRUE)

psych::alpha(svy_items, check.keys = TRUE)$total$std.alpha #this just gets the alpha value itself
# 0.6342141 (it's mock data though!!)
```

üêΩ Should I also do composite reliability?

```{r}
# https://www.r-bloggers.com/2016/08/five-ways-to-calculate-internal-consistency

# scroll down to "Composite Reliability" for instructions

```

## Inter-observer Reliability

### Cohen's Kappa

üêΩ How do I set up the date frame/run this? I definitely don't think I'm doing this part right

```{r}

# Attempt 1
# Generate df containing survey scores and rater
svy_scores_raters <- svy %>% select(11,49:61)
#  idk if I need to include PigID but that's column 12
kappa2(svy_scores_raters[, c("1", "2")], weight = "unweighted")
# doesn't work because of how the DF is set up
# do I need to set up the DF differently, or should I run a different test?
# or run this one but in  different way?
# Does not work

#Attempt 2 (doing it by score)
sc1_raters <- svy %>% 
  pivot_longer(cols = 'Rater', 'SC1', names_to = 'Score')
sc1_raters <- svy %>% select('Rater', 'SC1')
cohen.kappa(x=cbind(1, 2))
# Runs, but puts 0 for everything so must not be right either

```

# Primary Analyses

Do personality scores correlate with observable behaviors?

üêΩ This part I just made up and don't really know what to do so definitely let me know if you have better ideas on what I could do here

## Replicability/Repeatability (I don't even remember which one) of Behaviors

üêΩ Eli Strauss said to do this but idk what that is but I was trying to act cool and normal so I pretended that I knew what he was talking about the whole time

```{r}
# Put replicability(?) stuff here
```

## Aggression Towards Other Pigs

Hypothesis: A pig's Aggression Towards Pigs score (SC15) positively correlates with number of counts of obs\$Bite

```{r}
# Correlation between each pig's Aggression Towards Pigs score vs the number of times they bit another pig

# Make a graph
```

## Dominance Over Other Pigs

Hypothesis: A pig's Dominance Over Other Pigs score (SC16) positively correlates with number of counts of obs\$Attempt.displace and negatively correlates with number of counts of \$Get.displaced

#### Attempts at Displacement

```{r}
# Correlation between pig's SC16 vs # of times they attempted to displace another pig

# Make a graph
```

#### Getting Displaced

```{r}
# Correlation between pig's SC16 vs # of times they got displaced by another pig

# Make a graph
```

## Active Engagement

Hypothesis: Active Engagement score negatively correlated with number of times pig was resting

```{r}
# Correlation between each pig's Active Engagement score vs number of times they were recorded to be resting

# Make a graph
```

# Additional Analyses

## Subscale Analyses

```{r}
# Compare sex, group, and presence/absence of traumatic background with personality traits accross all pigs

# Is there a sex difference in personality scores?
ggplot(svy_wide, aes(x= facet, y= facet.value, group = Name, color = Name)) +
  geom_point() +
  geom_line(alpha=.5) +
  theme_classic()
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Differences in Personality Scores Between Pigs") +
  facet_wrap (~ Sex)
  
# Maybe average [trait] score for [group 1] and [group 2] or something like that

# Make social networks for Yaupon and Beautyberry
```

## Potential Moderators

```{r}
# Compare length of time volunteer has known pig with correlations bewteen surveys and traits from Primary Analyses???
```
