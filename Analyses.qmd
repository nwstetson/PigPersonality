---
title: "Pig Personality"
author: "Noah Stetson"
date: "`r Sys.Date()`"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## This is the analysis for my undergraduate thesis on personality in pigs üê∑

## üêΩ = questions I have

## Loading library

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(corrr) # might not need this
library(psych) # might not need this
library(irr) # might not need this
library(readr)
library(corrplot) # might not need this
library(irr)
```

## Loading datasets

Pulled from GitHub so you don't need to change these or download the CSV files!!

```{r}
obs <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Obs_Clean.csv", show_col_types = FALSE)  # behavior observations

svy <-read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Survey_Nov7_Clean.csv", show_col_types = FALSE)  # survey data (from 1 and 2)

svy_avg <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/svy_with_averages.csv", show_col_types = FALSE) # survey data (but with averages between raters)

meta <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/PigSample.csv", show_col_types = FALSE) # meta data (pig demographics)
```

## Cleaning Data

Put meta data into df based on pig id number

```{r}
svy_m <- inner_join(meta, svy, by = "PigID")
obs_m <- inner_join(meta, obs, by = "PigName")
svy_avg_m <- inner_join(meta, svy_avg, by = "PigID")

# DF with just test items
svy_items <- svy %>% select(4:38)
svy_avg_items <- svy_avg %>% select(5:109)

# DF with just scores
pig_scores <- svy_m %>% select(PigName, 50:61)
pig_avg_scores <- svy_avg_m %>% select(PigName, 110:145)
```

### Make wide/tidy(?) version of survey results

```{r}
svy_wide <- svy_m %>% 
  pivot_longer(cols = 50:61, names_to = "sub.facet", values_to ='subfacet.value') 

svy_wide <-svy_wide %>% 
  pivot_longer(cols = 15:49, names_to = "item", values_to = 'item.value')

svy_wide <-svy_wide %>% 
  pivot_longer(cols = 15:18, names_to = "facet", values_to = 'facet.value')
```

### Tidy data with averages

(don't run yet)

## üêΩ

```{r}
svy_avg_scores <- svy_avg_m %>% 
  pivot_longer(cols = 16:120, names_to = "item", values_to ='item.value') 
# how to tell it to skip count and do every 3 (16, 19, 22, ...) to have sub.facet.D,T, and .Avg

svy_avg_wide <- svy_avg_wide %>% 
  pivot_longer(cols = 16:51, names_to = "sub.facet", values_to ='subfacet.value') 

svy_avg_wide <- svy_avg_wide %>% 
  pivot_longer(cols = 16:27, names_to = "facet", values_to ='facet.value') 


```

```{r}
svy_avg_wide <- svy_avg_m %>% 
  pivot_longer(cols = 5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107, names_to = "sub.facet.D", values_to ='subfacet.value.D') 

svy_avg_wide <- svy_avg_wide %>% 
  pivot_longer(cols = 6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99,102,105,108, names_to = "sub.facet.T", values_to ='subfacet.value.T') 


svy_avg_wide <- svy_avg_wide %>% 
  pivot_longer(cols = 7,10,13,16,19,22,25,28,31,34,37,40,43,46,49,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94,97,100,103,106,109, names_to = "sub.facet.Avg", values_to ='subfacet.value.Avg') 


svy_avg_wide <-svy_avg_wide %>% 
  pivot_longer(cols = 15:49, names_to = "item", values_to = 'item.value') # x3 for Tracey

svy_avg_wide <-svy_avg_wide %>% 
  pivot_longer(cols = 15:18, names_to = "facet", values_to = 'facet.value') # x3 for Averages
```

# Preliminary Analyses

## Overview of Personality Survey Scores

```{r}
summary(pig_scores) # Summary of personality scores
describe(pig_scores)
```

```{r}
summary(svy_items) # Summary of item scoring
describe(svy_items)
```

Find standard deviations for each personality sub-facet (average respondent scores for each pig)

```{r}
apply(svy_avg[ , c('SC1.Avg', 'SC2.Avg', 'SC3.Avg', 'SC4.Avg', 'SC5.Avg', 'SC6.Avg',
                      'SC7.Avg', 'SC8.Avg', 'SC9.Avg', 'SC10.Avg', 'SC11.Avg', 'SC12.Avg')], 2, sd)
```

### As a graph

üêΩ What kind of visualization could I use to summarize this better?

## Sort by main facet

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

## Sub-facets

```{r}
svy_wide$sub.facet <- factor(svy_avg_wide$sub.facet.avg, levels=rev(unique(svy_avg_wide$sub.facet.avg)))

ggplot(svy_wide, aes(x= sub.facet.avg, y= subfacet.value.avg)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  coord_flip() +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

Old version

```{r}
svy_avg_wide$sub.facet.Avg <- factor(svy_wide$sub.facet, levels=rev(unique(svy_wide$sub.facet)))

ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  coord_flip() +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

## Overview of Behaviors

### As a table

```{r}
behavior_table = table(obs$PigName, obs$Behavior)

behavior_counts <- data.frame(rbind(behavior_table))


write.csv(behavior_counts, "~/Desktop/behavior_counts_Nov7.csv") 
# Convert to Excel file to magically add row numbers idk
# Also rename the first row to PigName

```

```{r}
#Then re-upload and it works hehe
behavior_counts <- read_csv("~/Desktop/behavior_counts_Nov7.csv")


# Make wide version
behavior_counts_wide <-behavior_counts %>% 
  pivot_longer(cols = 2:21 , names_to = "Behavior", values_to = 'Count')


# Also make verion with meta data
behavior_m <- inner_join(behavior_counts, meta, by = "PigName")
```

### As a graph

üêΩ Need to organize behaviors into sub-categories so this is easier to visualize

```{r}
ggplot(behavior_counts_wide, aes(x= Behavior, y= Count)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Behavior") +
  ylab("Counts") +
  ggtitle("Differences in Behavior Between Pigs")
```

## Internal Reliability

### Inter-item correlation

Fix CSV to get average scores

```{r}
write.csv(svy, "~/Desktop/svy_new.csv") 
```

(correlations between test items that go for the same construct)

üêΩ Having an issue removing NAs again (might be because one question accidentally got left blank)

```{r}
# Make DF with just test items
svy_items <- svy %>% select(4:38)

# See how they correlate
svy_items_corr <- svy_items %>% correlate() %>% select(-term)

# Remove NAs (something goes very wrong here!!)
svy_items_corr_rm_NA <- colMeans(svy_items_corr, na.rm = TRUE)

# Get average correlation between all the items
mean(svy_items_corr)

# Make into dataframe (maybe?)
svy_items_corr_df <- data.frame(rbind(svy_items_corr_rm_NA))
```

### Inter-total correlation

(correlations between scores)

üêΩ same issue as with items

```{r}
# Make df with just scores
svy_scores <- svy %>% select(39:50)

svy_scores_corr <- svy_scores %>% correlate() %>% select(-term)
svy_scores_corr <- colMeans(svy_scores_corr, na.rm = TRUE)

mean(svy_scores_corr)

# Make into DF so I can put it as a histogram
svy_scores_corr_df <- data.frame(rbind(svy_scores_corr))
```

### Cronbach's alpha

`check.keys = TRUE` accounts for reverse-scored items just FYI

```{r}
psych::alpha(svy_items, check.keys = TRUE)

psych::alpha(svy_items, check.keys = TRUE)$total$std.alpha #this just gets the alpha value itself
# 0.9131006
```

üêΩ Should I also do composite reliability?

```{r}
# https://www.r-bloggers.com/2016/08/five-ways-to-calculate-internal-consistency

# scroll down to "Composite Reliability" for instructions

```

## Inter-rater Reliability

Do rater 1 and rater 2 score each pig in a similar way?

üêΩ How do I calculate the correlation between these?

Also how do I reorder the tick marks

```{r}
ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value, fill = Rater)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("powderblue", "goldenrod1")) + #change colors and add outline
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

```{r}
relInterIntra(svy_wide, nrater=2, raterLabels=NULL, rho0inter=0.6,
               rho0intra=0.8, conf.level=.95)

```

### Cohen's Kappa

üêΩ How do I set up the date frame/run this? I definitely don't think I'm doing this part right

```{r}

# Attempt 1
# Generate df containing survey scores and rater
svy_scores_raters <- svy %>% select(11,49:61)
#  idk if I need to include PigID but that's column 12
kappa2(svy_scores_raters[, c("1", "2")], weight = "unweighted")
# doesn't work because of how the DF is set up
# do I need to set up the DF differently, or should I run a different test?
# or run this one but in  different way?
# Does not work

#Attempt 2 (doing it by score)
sc1_raters <- svy %>% 
  pivot_longer(cols = 'Rater', 'SC1', names_to = 'Score')
sc1_raters <- svy %>% select('Rater', 'SC1')
cohen.kappa(x=cbind(1, 2))
# Runs, but puts 0 for everything so must not be right either

```

# Primary Analyses

Do personality scores correlate with observable behaviors?

üêΩ This part I just made up and don't really know what to do so definitely let me know if you have better ideas on what I could do here

## Repeatability of Behaviors

üêΩ Eli Strauss said to do this but idk how to do it but I was trying to act cool and normal so I pretended that I knew what he was talking about the whole time

```{r}
# Put repeatability stuff here
# Something like this? https://cran.r-project.org/web/packages/rptR/vignettes/rptR.html

repeatability(obs)
```

## Dominance Over Other Pigs

Hypothesis: A pig's Dominance Over Other Pigs score (SC12) positively correlates with number of counts of obs\$Attempt.displace and negatively correlates with number of counts of \$Get.displaced

### Does get.disp correlated with SC12 (dominance over pigs)

```{r}
behavior_and_scores <- inner_join(behavior_m, pig_scores, by = "PigName")

ggplot(behavior_and_scores, aes(x=Get.disp, y=SC12)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Displaced") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Get Displaced Less?")


# Pearson's correlation
cor(behavior_and_scores$Get.disp, behavior_and_scores$SC12)
# -0.1822779 #umm this looks pretty weak right
```

What if it's split by sex?

```{r}
ggplot(behavior_and_scores, aes(x=Get.disp, y=SC12)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Displaced") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Get Displaced Less?") +
  facet_wrap(~ Sex)
```

#### Attempts at Displacement

```{r}
# Correlation between pig's SC12 vs # of times they attempted to displace another pig
ggplot(behavior_and_scores, aes(x=Attempt.disp, y=SC12)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Attempt Displace") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Displace Pigs More?")


# Pearson's correlation
cor(behavior_and_scores$Attempt.disp, behavior_and_scores$SC12)
# 0.1807212 #also weak
```

## Active Engagement

Hypothesis: Active Engagement score negatively correlated with number of times pig was resting

(Josh said don't do this bc engagment might not be the opposite of resting smh)

```{r}
ggplot(behavior_and_scores, aes(x=Travel, y=SC9)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Traveling") +
  ylab("Active Engagement Score") +
  ggtitle("Do Pigs that Score High on Active Engagement Travel More?")

# Pearson's correlation
cor(behavior_and_scores$Travel, behavior_and_scores$SC9)
#0.3479849
```

# Additional Analyses

## Subscale Analyses

Compare sex, group, and presence/absence of traumatic background with personality traits accross all pigs

Other ideas:

Maybe average \[trait\] score for \[group 1\] and \[group 2\] or something like that

Make social networks for Yaupon and Beautyberry

### Is there a sex difference in personality scores?

idk

```{r}
ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value, fill = Sex)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("powderblue", "goldenrod1")) +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Sex Differences in Personality Scores Across 20 Pigs")

```

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value, fill = Sex)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("powderblue", "goldenrod1")) +
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Sex Differences in Personality Scores Across 20 Pigs")

```

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value, fill = Background)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("seagreen1", "lightblue1")) +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

Background difference?

```{r}
ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value, fill = Background)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("seagreen1", "lightblue1")) +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

### Sex differences in getting displaced???

Males maybeee get displaced less???

```{r}
ggplot(behavior_m, aes(x=Get.disp, fill = Sex)) + 
   theme_classic() +
  xlab("Times Getting Displaced") +
  ylab("umm math i think") +
  ggtitle("Do Male Pigs Get Displaced Less Than Female Pigs?") +
  geom_density(alpha = 0.4) +
  theme_minimal() +
  scale_fill_manual(values = c("goldenrod1", "darkorchid4"))
```

### Background differences in getting displaced

```{r}
ggplot(behavior_m, aes(x=Get.disp, fill=Background)) + #fix name in DF later
  theme_classic() +
  xlab("Get Displaced") +
  ylab("Proportion") +
  ggtitle("Do Pigs From Abuse/Neglect Backgrounds Get Displaced More?") +
  geom_density(alpha = 0.4) +
  theme_minimal() +
  scale_fill_manual(name= "Background", labels=c("Abuse/Neglect", "Other"), values = c("brown2", "darkblue"))
```

## Potential Moderators

```{r}
# Compare length of time volunteer has known pig with correlations bewteen surveys and traits from Primary Analyses???
```

Factor analysis

```{r}

```
