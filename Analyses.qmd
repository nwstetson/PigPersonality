---
title: "Pig Personality"
author: "Noah Stetson"
date: "`r Sys.Date()`"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## This is the analysis for my undergraduate thesis on personality in pigs üê∑

## üêΩ = questions I have

## Loading library

```{r}
library(tidyverse)
library(dplyr)
library(ggplot2)
library(corrr) # might not need this
library(psych) # might not need this
library(irr) # might not need this
library(readr)
library(corrplot) # might not need this
library(irr)
```

## Loading datasets

Pulled from GitHub so you don't need to change these or download the CSV files!!

```{r}
obs <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Obs_Clean.csv", show_col_types = FALSE)  # behavior observations

behavior_counts <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/behavior_counts.csv", show_col_types = FALSE) # behavior observations but tidyer

svy <-read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/Survey_Nov7_Clean.csv", show_col_types = FALSE)  # survey data

svy_by_rater <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/svy_with_averages.csv", show_col_types = FALSE) # survey data (but with scores split between raters)

D_svy <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/svy_D.csv", show_col_types = FALSE) # survey data from rater D

T_svy <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/svy_T.csv", show_col_types = FALSE) # survey data from rater T

Avg_svy <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/svy_Avg.csv", show_col_types = FALSE) # survey data from averages of raters

meta <- read_csv("https://raw.githubusercontent.com/nwstetson/PigPersonality/main/PigSample.csv", show_col_types = FALSE) # meta data (pig demographics)
```

## Cleaning Data

Put meta data into df based on pig id number

```{r}
svy_m <- inner_join(meta, svy, by = "PigID")
obs_m <- inner_join(meta, obs, by = "PigName")
svy_avg_m <- inner_join(meta, svy_by_rater, by = "PigID")
```

### Survey data

Test items only version

```{r}
svy_items <- svy_avg_m %>% select(1:12,'Time.Known.D','Time.Known.T','Time.Known.Avg','D1.D':'D35.D','D1.T':'D35.T','D1.Avg':'D35.Avg')
```

Facet scores only version

```{r}
svy_f <- svy_avg_m %>% select(1:12,'Time.Known.D','Time.Known.T','Time.Known.Avg','F1.D':'F4.D','F1.T':'F4.T','F1.Avg':'F4.Avg')
```

Sub-facet scores only version

```{r}
svy_sf <- svy_avg_m %>% select(1:12,'Time.Known.D','Time.Known.T','Time.Known.Avg','SC1.D':'SC12.D','SC1.T':'SC12.T','SC1.Avg':'SC12.Avg') # All of them
```

### Make wide/tidy(?) version of survey results

Items

```{r}
items_tidy <-svy_items %>% 
  pivot_longer(cols = 'Time.Known.D':'Time.Known.Avg', names_to = "Time.Known", values_to = 'Time.Known.Value')
items_tidy <-items_tidy %>% 
  pivot_longer(cols = 'D1.D':'D35.D', names_to = "item.D", values_to = 'item.D.value')
items_tidy <-items_tidy %>% 
  pivot_longer(cols = 'D1.T':'D35.T', names_to = "item.T", values_to = 'item.T.value')
items_tidy <-items_tidy %>% 
  pivot_longer(cols = 'D1.Avg':'D35.Avg', names_to = "item.Avg", values_to = 'item.Avg.value')
```

Facet scores

```{r}
facets_tidy <-svy_f %>% 
  pivot_longer(cols = 'Time.Known.D':'Time.Known.Avg', names_to = "Time.Known", values_to = 'Time.Known.Value')
facets_tidy <-facets_tidy %>% 
  pivot_longer(cols = 'F1.D':'F4.D', names_to = "facet.D", values_to = 'facet.D.value')
facets_tidy <-facets_tidy %>% 
  pivot_longer(cols = 'F1.T':'F4.T', names_to = "facet.T", values_to = 'facet.T.value')
facets_tidy <-facets_tidy %>% 
  pivot_longer(cols = 'F1.Avg':'F4.Avg', names_to = "facet.Avg", values_to = 'facet.Avg.value')
```

Sub-facet scores

```{r}
subfacets_tidy <-svy_sf %>% 
  pivot_longer(cols = 'Time.Known.D':'Time.Known.Avg', names_to = "Time.Known", values_to = 'Time.Known.Value')
subfacets_tidy <-subfacets_tidy %>% 
  pivot_longer(cols = 'SC1.D':'SC12.D', names_to = "subfacet.D", values_to = 'subfacet.D.value')
subfacets_tidy <-subfacets_tidy %>% 
  pivot_longer(cols = 'SC1.T':'SC12.T', names_to = "subfacet.T", values_to = 'subfacet.T.value')
subfacets_tidy <-subfacets_tidy %>% 
  pivot_longer(cols = 'SC1.Avg':'SC12.Avg', names_to = "subfacet.Avg", values_to = 'subfacet.Avg.value')
```

### Behavior Observations

```{r}
# Make wide version
behavior_counts_wide <-behavior_counts %>% 
  pivot_longer(cols = 2:21 , names_to = "Behavior", values_to = 'Count')


# Also make verion with meta data
behavior_m <- inner_join(behavior_counts, meta, by = "PigName")
```

# Preliminary Analyses

## Overview of Personality Survey Scores

Item rating

```{r}
all_items <- svy_items %>% select(16:120)
describe(all_items)
```

Sub-facet scores

```{r}
all_sf <- svy_sf %>% select(16:51)
describe(all_sf)
```

### As a graph

üêΩ What kind of visualization could I use to summarize this better?

## Sort by main facet

```{r}
facets_tidy$facet.Avg <- factor(facets_tidy$facet.Avg, levels=rev(unique(facets_tidy$facet.Avg)))


ggplot(facets_tidy, aes(x= facet.Avg, y= facet.Avg.value)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Personality Facet") +
  ylab("Score") +
  coord_flip() +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

## Sub-facets

```{r}
subfacets_tidy$subfacet.Avg <- factor(subfacets_tidy$subfacet.Avg, levels=rev(unique(subfacets_tidy$subfacet.Avg)))


ggplot(subfacets_tidy, aes(x= subfacet.Avg, y= subfacet.Avg.value)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  coord_flip() +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

## Overview of Behaviors

### As a graph

```{r}
ggplot(behavior_counts_wide, aes(x= Behavior, y= Count)) +
  geom_boxplot(color = "navy", fill='lightsteelblue1') +
  theme_classic() +
  xlab("Behavior") +
  ylab("Counts") +
  ggtitle("Differences in Behavior Between Pigs")
```

## Internal Reliability

### Inter-item correlation

(correlations between each pig's average raw item scores)

```{r}
avg_items <- Avg_svy %>% select(3:37)
inter_item <- avg_items %>% correlate() %>% select(-term)
# do I need this? inter_item <- colMeans(inter_item, na.rm = TRUE)
```

### Cronbach's alpha

```{r}
psych::alpha(avg_items)
```

### Inter-total correlation

(correlations between calculated personality sub-facet scores)

```{r}
avg_sf <- Avg_svy %>% select(38:49)
inter_total_sf <- avg_items %>% correlate() %>% select(-term)
# do I need this? inter_item <- colMeans(inter_item, na.rm = TRUE)
```

## Inter-rater Reliability

Do rater 1 and rater 2 score each pig in a similar way?

üêΩ How do I calculate the correlation between these?

Make a new df because my brain is so smooth I literally cannot figure out how else to do it what if i killed myself right now

```{r}
svy_wide <-svy_m %>% 
  pivot_longer(cols = 18:52, names_to = "item", values_to = 'item.value')
svy_wide <- svy_wide %>% 
  pivot_longer(cols = 18:29, names_to = "sub.facet", values_to ='subfacet.value')
svy_wide <- svy_wide %>% 
  pivot_longer(cols = 18:21, names_to = "facet", values_to = 'facet.value')
```

```{r}
svy_wide$sub.facet <- factor(svy_wide$sub.facet, levels=rev(unique(svy_wide$sub.facet)))
#this reorders the tick marks so it's not out of order

ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value, fill = Rater)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("powderblue", "goldenrod1")) + #change colors and add outline
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

### Cohen's Kappa

üêΩ How do I set up the date frame/run this? I definitely don't think I'm doing this part right

```{r}
# SC1
irr_sc1 <- svy %>% select('Rater', 'SC1', 'PigID')

irr_sc1 <- irr_sc1 %>% remove_rownames %>% column_to_rownames(var="Rater")

kappa2(irr_sc1[,c(1,2)], "unweighted")

```

# Primary Analyses

Do personality scores correlate with observable behaviors?

üêΩ This part I just made up and don't really know what to do so definitely let me know if you have better ideas on what I could do here

## Repeatability of Behaviors

üêΩ Eli Strauss said to do this but idk how to do it but I was trying to act cool and normal so I pretended that I knew what he was talking about the whole time

```{r}
# Put repeatability stuff here
# Something like this? https://cran.r-project.org/web/packages/rptR/vignettes/rptR.html

repeatability(obs)
```

## Dominance Over Other Pigs

Hypothesis: A pig's Dominance Over Other Pigs score (SC12) positively correlates with number of counts of obs\$Attempt.displace and negatively correlates with number of counts of \$Get.displaced

### Does get.disp correlated with SC12 (dominance over pigs)

```{r}
behavior_and_scores <- inner_join(behavior_m, pig_scores, by = "PigName")

ggplot(behavior_and_scores, aes(x=Get.disp, y=SC12)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Displaced") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Get Displaced Less?")


# Pearson's correlation
cor(behavior_and_scores$Get.disp, behavior_and_scores$SC12)
# -0.1822779 #umm this looks pretty weak right
```

What if it's split by sex?

```{r}
ggplot(behavior_and_scores, aes(x=Get.disp, y=SC12)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Displaced") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Get Displaced Less?") +
  facet_wrap(~ Sex)
```

#### Attempts at Displacement

```{r}
# Correlation between pig's SC12 vs # of times they attempted to displace another pig
ggplot(behavior_and_scores, aes(x=Attempt.disp, y=SC12)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Attempt Displace") +
  ylab("Dominance Score") +
  ggtitle("Do Pigs that Score Higher on Dominance Displace Pigs More?")


# Pearson's correlation
cor(behavior_and_scores$Attempt.disp, behavior_and_scores$SC12)
# 0.1807212 #also weak
```

## Active Engagement

Hypothesis: Active Engagement score negatively correlated with number of times pig was resting

(Josh said don't do this bc engagment might not be the opposite of resting smh)

```{r}
ggplot(behavior_and_scores, aes(x=Travel, y=SC9)) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("Times Traveling") +
  ylab("Active Engagement Score") +
  ggtitle("Do Pigs that Score High on Active Engagement Travel More?")

# Pearson's correlation
cor(behavior_and_scores$Travel, behavior_and_scores$SC9)
#0.3479849
```

# Additional Analyses

## Subscale Analyses

Compare sex, group, and presence/absence of traumatic background with personality traits accross all pigs

Other ideas:

Maybe average \[trait\] score for \[group 1\] and \[group 2\] or something like that

Make social networks for Yaupon and Beautyberry

### Is there a sex difference in personality scores?

idk

```{r}
ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value, fill = Sex)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("powderblue", "goldenrod1")) +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Sex Differences in Personality Scores Across 20 Pigs")

```

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value, fill = Sex)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("powderblue", "goldenrod1")) +
  xlab("Personality Facet") +
  ylab("Score") +
  ggtitle("Sex Differences in Personality Scores Across 20 Pigs")

```

```{r}
ggplot(svy_wide, aes(x= facet, y= facet.value, fill = Background)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("seagreen1", "lightblue1")) +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

Background difference?

```{r}
ggplot(svy_wide, aes(x= sub.facet, y= subfacet.value, fill = Background)) +
  geom_boxplot() +
  theme_classic() +
  scale_fill_manual(values = c("seagreen1", "lightblue1")) +
  xlab("Personality Sub-Facet") +
  ylab("Score") +
  ggtitle("Variation in Personality Scores Across 20 Pigs")
```

### Sex differences in getting displaced???

Males maybeee get displaced less???

```{r}
ggplot(behavior_m, aes(x=Get.disp, fill = Sex)) + 
   theme_classic() +
  xlab("Times Getting Displaced") +
  ylab("umm math i think") +
  ggtitle("Do Male Pigs Get Displaced Less Than Female Pigs?") +
  geom_density(alpha = 0.4) +
  theme_minimal() +
  scale_fill_manual(values = c("goldenrod1", "darkorchid4"))
```

### Background differences in getting displaced

```{r}
ggplot(behavior_m, aes(x=Get.disp, fill=Background)) + #fix name in DF later
  theme_classic() +
  xlab("Get Displaced") +
  ylab("Proportion") +
  ggtitle("Do Pigs From Abuse/Neglect Backgrounds Get Displaced More?") +
  geom_density(alpha = 0.4) +
  theme_minimal() +
  scale_fill_manual(name= "Background", labels=c("Abuse/Neglect", "Other"), values = c("brown2", "darkblue"))
```

## Potential Moderators

```{r}
# Compare length of time volunteer has known pig with correlations bewteen surveys and traits from Primary Analyses???
```

Factor analysis

```{r}

```
